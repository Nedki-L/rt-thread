name: action_runner

on:
  pull_request:
    types: [opened, synchronize, reopened]

jobs:
  review-pr:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Set up Node.js (for JSON parsing)
      uses: actions/setup-node@v2
      with:
        node-version: '14'

    - name: Parse MAINTAINER.json and get affected owners
      run: |
        # Load MAINTAINER.json and parse it
        maintainer_json=$(cat MAINTAINER.json)
        
        # Get list of modified files in the PR
        pr_files=$(git diff --name-only ${{ github.event.before }} ${{ github.sha }})
        
        # Parse the MAINTAINER.json to create a mapping of path to owners
        declare -A tag_owners

        for entry in $(echo "$maintainer_json" | jq -r '.[] | @base64'); do
          _jq() {
            echo ${entry} | base64 --decode | jq -r ${1}
          }

          tag=$(echo "$entry" | _jq '.tag')
          path=$(echo "$entry" | _jq '.path')
          owners=$(echo "$entry" | _jq '.owners')

          # Convert owners into GitHub IDs
          owner_github_ids=$(echo "$owners" | sed -E 's/.*\(([^)]+)\)<.*>/@\1/g')

          tag_owners["$path"]="$tag_owners[$path] $owner_github_ids"
        done

        # Check which tag needs to be triggered based on modified files
        affected_tags=()
        for file in $pr_files; do
          for path in "${!tag_owners[@]}"; do
            if [[ $file == $path* ]]; then
              affected_tags+=("${tag_owners[$path]}")
            fi
          done
        done

        # If affected tags found, prepare the comment
        if [ ${#affected_tags[@]} -gt 0 ]; then
          tags_unique=$(echo "${affected_tags[@]}" | tr ' ' '\n' | sort -u | tr '\n' ' ')
          
          # Format and send the comment
          pr_number=${{ github.event.pull_request.number }}
          comment_body="timestamp: $(date)
          
Reviewer: ${tags_unique}

Modified files:
$(echo "$pr_files")"

          curl -X POST \
            -H "Authorization: token ${{ secrets.GITHUB_TOKEN }}" \
            -H "Content-Type: application/json" \
            -d '{"body":"'"$comment_body"'"}' \
            "https://api.github.com/repos/${{ github.repository }}/issues/$pr_number/comments"
        fi
