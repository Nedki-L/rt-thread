name: Auto Reviewers Assignment

on:
  pull_request:
    types: [opened, synchronize, reopened]

jobs:
  assign-reviewers:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2  # 获取仓库的完整代码

      - name: Get changed files in the PR
        id: changed_files
        run: |
          echo "Getting changed files..."
          # 使用 GitHub API 获取 PR 中修改的文件
          changed_files=$(curl -s \
            -H "Authorization: Bearer ${{ secrets.GITHUB_TOKEN }}" \
            "https://api.github.com/repos/${{ github.repository }}/pulls/${{ github.event.pull_request.number }}/files" | \
            jq -r '.[].filename')
          
          # 排除 MAINTAINER 文件
          filtered_files=$(echo "$changed_files" | grep -v 'MAINTAINER')
          echo "Filtered changed files: $filtered_files"
          echo "changed_files=$filtered_files" >> $GITHUB_ENV  # 保存到环境变量中

      - name: Save MAINTAINER file to a temporary file
        id: save_maintainer
        run: |
          echo "Saving MAINTAINER file..."
          cat MAINTAINER > maintainer_content.txt  # 保存 MAINTAINER 内容到临时文件
          echo "MAINTAINER content saved."

      - name: Read MAINTAINER file and generate review comments
        id: generate_comments
        run: |
          # 读取保存的 MAINTAINER 内容
          maintainer_content=$(cat maintainer_content.txt)
          changed_files="${{ env.changed_files }}"

          # 初始化空的评论内容
          comment_msg=""

          # 解析 MAINTAINER 文件，按 tag 分类
          tags=$(echo "$maintainer_content" | grep -oP 'tag: \K\w+')

          for tag in $tags; do
            # 获取对应的 path 和 reviewers
            paths=$(echo "$maintainer_content" | grep -A 1 "tag: $tag" | grep 'path:' | awk '{print $2}')
            owners=$(echo "$maintainer_content" | grep -A 1 "tag: $tag" | grep 'owners:' | sed 's/owners: //')

            for path in $paths; do
              # 判断修改的文件是否匹配该 path
              for file in $changed_files; do
                if [[ "$file" == $path* ]]; then
                  # 生成评论内容
                  reviewers=$(echo "$owners" | sed 's/,/ @/g' | sed 's/^/@/')
                  timestamp=$(date +'%Y-%m-%d %H:%M:%S')
                  comment_msg+="Timestamp: $timestamp\nReviewer: $reviewers\n\nTag: $tag\nPlease take a review of this tag\n\n"
                fi
              done
            done
          done

          echo "comment_msg=$comment_msg" >> $GITHUB_ENV  # 保存评论内容到环境变量中

      - name: Post comment on the PR
        if: env.comment_msg != ''
        run: |
          comment="${{ env.comment_msg }}"
          curl -s \
            -H "Authorization: Bearer ${{ secrets.GITHUB_TOKEN }}" \
            -X POST \
            -d "{\"body\": \"$comment\"}" \
            "https://api.github.com/repos/${{ github.repository }}/issues/${{ github.event.pull_request.number }}/comments"
